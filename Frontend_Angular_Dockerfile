#Angular App Directory Assumtion
.
├── package.json
├── angular.json
├── tsconfig.json
├── src/
└── Dockerfile


#production Ready Angular Dockerfile


# -------- STAGE 1: Build Angular App --------
FROM node:20-alpine AS builder

WORKDIR /app

# Create non-root user
RUN addgroup -S app && adduser -S app -G app
USER app

# Install deps
COPY --chown=app:app package*.json ./
RUN npm ci

# Copy source code
COPY --chown=app:app . .

# Build the Angular app (dist will be in /app/dist/<app-name>)
RUN npm run build -- --configuration production

# -------- STAGE 2: Serve with Nginx --------
FROM nginx:1.25-alpine AS runner

# Remove default nginx config and use secure one
RUN rm /etc/nginx/conf.d/default.conf
COPY nginx.conf /etc/nginx/nginx.conf

# Copy build output from builder (adjust app name)
COPY --from=builder /app/dist/* /usr/share/nginx/html

# Add non-root user for runtime
RUN addgroup --system app && adduser --system --ingroup app app && \
    chown -R app:app /usr/share/nginx/html
USER app

EXPOSE 80

# Healthcheck for static server
HEALTHCHECK --interval=30s --timeout=5s --start-period=10s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost || exit 1

CMD ["nginx", "-g", "daemon off;"]



#####################################################################
Nginx.conf
#####################################################################

events {}
http {
  include       mime.types;
  default_type  application/octet-stream;
  sendfile        on;
  keepalive_timeout  65;

  server {
    listen 80;
    server_name localhost;

    location / {
      root   /usr/share/nginx/html;
      index  index.html;
      try_files $uri $uri/ /index.html;
    }

    location ~* \.(?:css|js|gif|jpe?g|png|woff2?|eot|ttf|svg|ico)$ {
      expires 1y;
      access_log off;
      add_header Cache-Control "public";
    }

    error_page 404 /index.html;
  }
}

